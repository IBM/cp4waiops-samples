"use strict";function _typeof(a){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function _defineProperties(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,_toPropertyKey(c.key),c)}function _createClass(a,b,c){return b&&_defineProperties(a.prototype,b),c&&_defineProperties(a,c),Object.defineProperty(a,"prototype",{writable:!1}),a}function _toPropertyKey(a){var b=_toPrimitive(a,"string");return"symbol"==_typeof(b)?b:b+""}function _toPrimitive(a,b){if("object"!=_typeof(a)||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=_typeof(d))return d;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}define([],function(){"use strict";var a=function(){function a(b){var c=this;_classCallCheck(this,a),this.content=b.content,this.canvas=b.features["Dashboard.Canvas"],this.canvas.on("change:content:selections",function(a){var b=a.info.events[0].info.contentId,d=c.canvas.getContent(b).getFeature("DataPointSelections");iframeTopoWidget.contentWindow.postMessage({source:"dashboard",params:{widgetdata:d.getSelections()}},"*")}),this.messageHandler=function(a){var b=a.data;document.getElementById("topologyWidget").contentWindow.postMessage(b,"*")},this.content.on("change:property",function(a){var b,c,d,e,f,g=document.getElementById("topologyWidget");if("change:property:hops"===(null===a||void 0===a||null===(b=a.info)||void 0===b?void 0:b.events[0].name)){var h,i=null===a||void 0===a||null===(h=a.info)||void 0===h?void 0:h.events[0].info.value;g.contentWindow.postMessage({source:"dashboard",params:{hops:i}},"*")}if("change:property:toggleToolbar"===(null===a||void 0===a||null===(c=a.info)||void 0===c?void 0:c.events[0].name)){var j,k=null===a||void 0===a||null===(j=a.info)||void 0===j?void 0:j.events[0].info.value;g.contentWindow.postMessage({source:"dashboard",params:{hideToolbar:!k}},"*")}if("change:property:toggleSearch"===(null===a||void 0===a||null===(d=a.info)||void 0===d?void 0:d.events[0].name)){var l,m=null===a||void 0===a||null===(l=a.info)||void 0===l?void 0:l.events[0].info.value;g.contentWindow.postMessage({source:"dashboard",params:{hideSearch:!m}},"*")}if("change:property:resourceId"===(null===a||void 0===a||null===(e=a.info)||void 0===e?void 0:e.events[0].name)){var n,o=null===a||void 0===a||null===(n=a.info)||void 0===n?void 0:n.events[0].info.value;g.contentWindow.postMessage({source:"dashboard",params:{transformations:{resourceId:o}}},"*")}if("change:property:statusId"===(null===a||void 0===a||null===(f=a.info)||void 0===f?void 0:f.events[0].name)){var p,q=null===a||void 0===a||null===(p=a.info)||void 0===p?void 0:p.events[0].info.value;g.contentWindow.postMessage({source:"dashboard",params:{transformations:{statusId:q}}},"*")}}),window.addEventListener("message",this.messageHandler,!1)}return _createClass(a,[{key:"getAPI",value:function getAPI(){var a=this;return{render:function render(b){return a.render(b)}}}},{key:"destroy",value:function destroy(){window.removeEventListener("message",this.messageHandler,!1)}},{key:"renderControl",value:function renderControl(){this.parentNode.innerHTML="<iframe id='topologyWidget' src='https://"+window.location.host+"/aiops/cfd95b7e-3bc7-4006-a4a8-a73a79c71255/widgets/topology-viewer' title='AIOPS Topology widget' width='100%' height='100%'></iframe>"}},{key:"render",value:function render(a){return this.parentNode=a.parent,this.renderControl(),Promise.resolve()}}]),a}();return a});