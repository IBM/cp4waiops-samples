{"version":3,"file":"apiErrorCheck.js","names":["FETCH_ERROR","FETCH_ERROR_400","FETCH_ERROR_401","FETCH_ERROR_403","FETCH_ERROR_500","errorCheck","fetchPromise","response","e","console","error","ok","responseText","text","errType","status","log","url","_exports"],"sources":["../../ext/common/apiErrorCheck.js"],"sourcesContent":["/* ******************************************************** {COPYRIGHT-TOP} ****\n * IBM Confidential\n * 5725-Q09, 5737-M96\n * Â© Copyright IBM Corp. 2024\n ********************************************************* {COPYRIGHT-END} ****/\nconst FETCH_ERROR = 'FETCH_ERROR';\nconst FETCH_ERROR_400 = 'FETCH_ERROR_400';\nconst FETCH_ERROR_401 = 'FETCH_ERROR_401';\nconst FETCH_ERROR_403 = 'FETCH_ERROR_403';\nconst FETCH_ERROR_500 = 'FETCH_ERROR_500';\n\nexport const errorCheck = async (fetchPromise) =>  {\n  let response;\n  try {\n    response = await fetchPromise;\n  } catch (e) {\n    console.error(e);\n  }\n\n  if (!response.ok) {\n    let responseText;\n    try {\n      responseText = response.text();\n    } catch (e) {\n      // Ignore failure\n    }\n\n    let errType;\n\n    if (response.status >= 400 && response.status < 500) {\n      switch (response.status) {\n        case 401:\n          errType = FETCH_ERROR_401;\n          break;\n        case 403:\n          errType = FETCH_ERROR_403;\n          break;\n        default:\n          errType = FETCH_ERROR_400;\n          break;\n      }\n    } else if (response.status >= 500 && response.status < 600) {\n      errType = FETCH_ERROR_500;\n    } else {\n      errType = FETCH_ERROR;\n    }\n\n    console.log('HDM_EA_UIAPI_ERROR', errType, {\n      status: response.status,\n      url: response.url,\n      responseText\n    });\n  }\n  return response;\n};\n"],"mappings":";;;;;;;EAAA;AACA;AACA;AACA;AACA;EACA,MAAMA,WAAW,GAAG,aAAa;EACjC,MAAMC,eAAe,GAAG,iBAAiB;EACzC,MAAMC,eAAe,GAAG,iBAAiB;EACzC,MAAMC,eAAe,GAAG,iBAAiB;EACzC,MAAMC,eAAe,GAAG,iBAAiB;EAElC,MAAMC,UAAU,GAAG,MAAOC,YAAY,IAAM;IACjD,IAAIC,QAAQ;IACZ,IAAI;MACFA,QAAQ,GAAG,MAAMD,YAAY;IAC/B,CAAC,CAAC,OAAOE,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;IAClB;IAEA,IAAI,CAACD,QAAQ,CAACI,EAAE,EAAE;MAChB,IAAIC,YAAY;MAChB,IAAI;QACFA,YAAY,GAAGL,QAAQ,CAACM,IAAI,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOL,CAAC,EAAE;QACV;MAAA;MAGF,IAAIM,OAAO;MAEX,IAAIP,QAAQ,CAACQ,MAAM,IAAI,GAAG,IAAIR,QAAQ,CAACQ,MAAM,GAAG,GAAG,EAAE;QACnD,QAAQR,QAAQ,CAACQ,MAAM;UACrB,KAAK,GAAG;YACND,OAAO,GAAGZ,eAAe;YACzB;UACF,KAAK,GAAG;YACNY,OAAO,GAAGX,eAAe;YACzB;UACF;YACEW,OAAO,GAAGb,eAAe;YACzB;QACJ;MACF,CAAC,MAAM,IAAIM,QAAQ,CAACQ,MAAM,IAAI,GAAG,IAAIR,QAAQ,CAACQ,MAAM,GAAG,GAAG,EAAE;QAC1DD,OAAO,GAAGV,eAAe;MAC3B,CAAC,MAAM;QACLU,OAAO,GAAGd,WAAW;MACvB;MAEAS,OAAO,CAACO,GAAG,CAAC,oBAAoB,EAAEF,OAAO,EAAE;QACzCC,MAAM,EAAER,QAAQ,CAACQ,MAAM;QACvBE,GAAG,EAAEV,QAAQ,CAACU,GAAG;QACjBL;MACF,CAAC,CAAC;IACJ;IACA,OAAOL,QAAQ;EACjB,CAAC;EAACW,QAAA,CAAAb,UAAA,GAAAA,UAAA;AAAA","ignoreList":[]}